@page "/blazorjs"
@inject IJSRuntime JsRuntime

<h3>Blazorjs</h3>

<div class="row">
    <button class="btn btn-secondary" @onclick="(()=>TestConfirmBox(ConfirmMessage))">Test</button>
</div>
<div class="row mt-4">
    <button class="btn btn-success" @onclick="TestSuccess">Test Success</button>
    <button class="btn btn-danger" @onclick="TestFailure">Test Error</button>
</div>
<div class="row mt-4">
    <button class="btn btn-success" @onclick="TestSuccessSwal">Test Success Swal</button>
    <button class="btn btn-danger" @onclick="TestFailureSwal">Test Error Swal</button>
</div>
<div class="row">
    @if (ConfirmResult)
    {
        <p>yep</p>
    }
    else
    {
        <p>nope</p>
    }
</div>

@code {
    private string ConfirmMessage { get; set; } = "Are you sure?";
    private bool ConfirmResult { get; set; }

    private async Task TestConfirmBox(string message)
    {
        ConfirmResult = await JsRuntime.InvokeAsync<bool>("confirm", message);
    }
    private async Task TestSuccess()
    {
        await JsRuntime.ToastrSuccess("Success Message");
    }
    private async Task TestFailure()
    {
        await JsRuntime.ToastrError("Error Message");
    }
    private async Task TestSuccessSwal()
    {
        await JsRuntime.SuccessSwal("Blah");
    }
    private async Task TestFailureSwal()
    {
        await JsRuntime.ErrorSwal("errrrror");
    }
}
